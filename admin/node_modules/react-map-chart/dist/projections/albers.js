'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var d2r = function d2r(angleInDegrees) {
  return angleInDegrees * .017453292519943295;
};

var pixelsPerLonDegree = 256;

var defaultFactor = {
  latLng: [50, -40],
  phi: [50, 50]
};

var innerGetFactors = function innerGetFactors(_ref) {
  var latLng = _ref.latLng,
      phi = _ref.phi;

  var lat0 = d2r(latLng[0]);
  var lng0 = d2r(latLng[1]);
  var phi1 = d2r(phi[0]);
  var phi2 = d2r(phi[1]);

  var n = 0.5 * (Math.sin(phi1) + Math.sin(phi2));
  var c = Math.cos(phi1);
  var C = c * c + 2 * n * Math.sin(phi1);
  var p0 = Math.sqrt(C - 2 * n * Math.sin(lat0)) / n;

  return { p0: p0, n: n, C: C, lng0: lng0 };
};

var lastFactors = void 0;
var lastResult = void 0;

var getFactors = function getFactors() {
  var factors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultFactor;

  if (lastFactors === factors) {
    return lastResult;
  }
  lastResult = innerGetFactors(factors);
  lastFactors = factors;
  return lastResult;
};

var albers = exports.albers = {
  projection: function projection(latLng, options) {
    var _getFactors = getFactors(options),
        lng0 = _getFactors.lng0,
        n = _getFactors.n,
        C = _getFactors.C,
        p0 = _getFactors.p0;

    var theta = n * (d2r(latLng[0]) - lng0);
    var p = Math.sqrt(C - 2 * n * Math.sin(d2r(latLng[1]))) / n;
    return [(p0 - p * Math.cos(theta)) * pixelsPerLonDegree, p * Math.sin(theta) * pixelsPerLonDegree];
  },
  viewBox: '50 0 600 500'
};